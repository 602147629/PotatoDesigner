<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 width="300" height="400" initialize="initializeHandler(event)">
	<s:layout>
		<s:VerticalLayout/>
	</s:layout>
	
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			
			import potato.designer.framework.DesignerEvent;
			import potato.designer.framework.EventCenter;
			import potato.designer.plugin.uidesigner.CompilerProfile;
			import potato.designer.plugin.uidesigner.DesignerConst;
			import potato.designer.plugin.uidesigner.UIDesignerHost;
			import potato.designer.plugin.uidesigner.ViewController;
			
			protected var _rootXml:XML;
			
			protected function initializeHandler(event:FlexEvent):void
			{
				EventCenter.addEventListener(DesignerConst.FOCUS_CHANGED, focusChangedHandler);
				EventCenter.addEventListener(DesignerConst.UPDATE, updateHandler);
				
				EventCenter.addEventListener(DesignerConst.OUTLINE_ITEM_CLICK, outlineItemClickHandler);
				EventCenter.addEventListener(DesignerConst.OUTLINE_ITEM_DOUBLE_CLICK, outlineItemDoubleClickHandler);
			}
			
			protected function outlineItemClickHandler(event:DesignerEvent):void
			{
//				var path:Vector.<uint> = getPathByXml(event.data);
				var path:Vector.<uint> = (event.data as CompilerProfile).path;
				log("点击了", path);
				var index:int = path.pop();
				ViewController.setFoldAndFocus(path, index);
			}
			
			protected function outlineItemDoubleClickHandler(event:DesignerEvent):void
			{
//				var path:Vector.<uint> = getPathByXml(event.data);
				var path:Vector.<uint> = (event.data as CompilerProfile).path;
				log("双击了", path);
				ViewController.setFoldAndFocus(path, -1);
			}
			
			protected function getPathByXml(xml:XML):Vector.<uint>
			{
				var path:Vector.<uint> = new Vector.<uint>;
				var parent:XML;
				while(parent = xml.parent())
				{
					path.unshift(xml.childIndex());
					xml = parent;
				}
				path.unshift(0);
				return path;
			}
			
			public function focusChangedHandler(event:DesignerEvent):void
			{
				
			}
			
			protected function updateHandler(event:DesignerEvent):void
			{
				if(UIDesignerHost.rootCompilerProfile)
				{
//					tree.dataProvider = creatXML(UIDesignerHost.rootCompilerProfile);
					tree.dataProvider = UIDesignerHost.rootCompilerProfile;
					tree.validateNow();
					focusChangedHandler(event);
				}
				else
				{
					tree.dataProvider = null;
				}
			}
			
			protected function creatXML(cp:CompilerProfile):XML
			{
				var xml:XML = <target name={cp.name || cp.type}/>;
				for each(var childCP:CompilerProfile in cp.childrenVector)
				{
					xml.appendChild(creatXML(childCP));
				}
				return xml;
			}
			
//			protected function getXmlByPath(path:Vector.<uint>):XML
//			{
//				var xml:XML = _rootXml;
//				for each(var index:uint in path)
//				{
//					xml = xml.children()[index];
//				}
//				return xml;
//			}
//			
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<s:Label text="大纲视图"/>
	<mx:Tree id="tree" width="100%" height="100%" itemRenderer="potato.designer.plugin.uidesigner.view.OutlineViewItem" ></mx:Tree>
</s:Group>
